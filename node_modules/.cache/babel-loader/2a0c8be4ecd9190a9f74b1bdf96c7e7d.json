{"ast":null,"code":"var _jsxFileName = \"/home/james/sfu/hist338/enigma/enigma/src/components/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = ({\n  textInput\n}) => {\n  _s();\n\n  // store the users input in the inputMessage variable and update that value as the user add more text\n  const [inputMessage, setMessage] = useState(\"\");\n  useEffect(() => {\n    isValidInput(inputMessage);\n    console.log(\"Use effect inputmessge: \", inputMessage);\n    textInput({\n      inputMessage\n    });\n  }, [inputMessage]);\n\n  function isValidInput(inputMessage) {\n    if (/^[a-zA-Z]*$/g.test(inputMessage)) {\n      console.log(\"its a valid input\");\n    } else {\n      console.log(\"error bad input\");\n      alert(\"Please use only the letters A-Z either upper or lower case.\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Code Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-text\",\n      id: \"enigma-input\",\n      type: \"text\",\n      placeholder: \"Input\" //value={inputMessage}\n      ,\n      onChange: event => setMessage(event.target.value) //onChange={handleChange}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Input, \"xAJ0kx6qPkapBRqzMiCDI94H0Io=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/james/sfu/hist338/enigma/enigma/src/components/Input.js"],"names":["React","useState","useEffect","Input","textInput","inputMessage","setMessage","isValidInput","console","log","test","alert","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAKA,MAAMC,KAAK,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAmB;AAAA;;AAE7B;AACA,QAAM,CAACC,YAAD,EAAeC,UAAf,IAA6BL,QAAQ,CAAC,EAAD,CAA3C;AAKAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,YAAY,CAACF,YAAD,CAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCJ,YAAxC;AAEAD,IAAAA,SAAS,CAAC;AAACC,MAAAA;AAAD,KAAD,CAAT;AAEH,GANQ,EAMN,CAACA,YAAD,CANM,CAAT;;AAWA,WAASE,YAAT,CAAsBF,YAAtB,EAAoC;AAChC,QAAI,eAAeK,IAAf,CAAoBL,YAApB,CAAJ,EAAsC;AAClCG,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,KAFD,MAGI;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAE,MAAAA,KAAK,CAAC,6DAAD,CAAL;AACH;AACJ;;AAID,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,EAAE,EAAC,cAFP;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,WAAW,EAAC,OAJhB,CAKI;AALJ;AAMI,MAAA,QAAQ,EAAGC,KAAD,IAAWN,UAAU,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CANnC,CAOI;;AAPJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAjDD;;GAAMX,K;;KAAAA,K;AAmDN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n\n\n\nconst Input = ( {textInput} ) => {\n\n    // store the users input in the inputMessage variable and update that value as the user add more text\n    const [inputMessage, setMessage] = useState(\"\");\n    \n    \n\n\n    useEffect(() => {\n        isValidInput(inputMessage);\n        console.log(\"Use effect inputmessge: \", inputMessage);\n        \n        textInput({inputMessage})\n\n    }, [inputMessage])\n\n\n\n\n    function isValidInput(inputMessage) {\n        if (/^[a-zA-Z]*$/g.test(inputMessage)){\n            console.log(\"its a valid input\");\n        }\n        else{\n            console.log(\"error bad input\")\n            alert(\"Please use only the letters A-Z either upper or lower case.\")\n        }\n    }\n\n    \n\n    return (\n        <div className=\"input-section\">     \n            <label>Code Input</label>   \n            <input \n                className=\"input-text\" \n                id=\"enigma-input\" \n                type=\"text\" \n                placeholder=\"Input\"\n                //value={inputMessage}\n                onChange={(event) => setMessage(event.target.value)}\n                //onChange={handleChange}\n            />\n\n\n\n            \n        </div>\n    )\n}\n\nexport default Input\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/james/sfu/hist338/enigma/enigma/src/components/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = ({\n  onAdd\n}) => {\n  _s();\n\n  // store the users input in the inputMessage variable and update that value as the user add more text\n  const [inputMessage, setMessage] = useState();\n\n  function handleChange(event) {\n    //event.persist();\n    isValidInput(event.target.value);\n    setMessage(event.target.value);\n    console.log(\"event.t.v: \", event.target.value);\n    console.log(\"inputmessage:  \", inputMessage);\n    return onAdd({\n      inputMessage\n    });\n  }\n\n  function isValidInput(inputMessage) {\n    if (/^[a-zA-Z]*$/g.test(inputMessage)) {\n      console.log(\"its a valid input\");\n    } else {\n      console.log(\"error bad input\");\n      alert(\"Please use only the letters A-Z either upper or lower case.\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Code Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-text\",\n      id: \"enigma-input\",\n      type: \"text\",\n      placeholder: \"Input\" //value={inputMessage}\n      //onChange={(event) => setMessage(event.target.value)}\n      ,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", inputMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Input, \"ZKIUF63NV/PxRL48DjEnSnmsrFs=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/james/sfu/hist338/enigma/enigma/src/components/Input.js"],"names":["React","useState","Input","onAdd","inputMessage","setMessage","handleChange","event","isValidInput","target","value","console","log","test","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAKA,MAAMC,KAAK,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAe;AAAA;;AAEzB;AACA,QAAM,CAACC,YAAD,EAAeC,UAAf,IAA6BJ,QAAQ,EAA3C;;AAIA,WAASK,YAAT,CAAsBC,KAAtB,EAA6B;AACzB;AACAC,IAAAA,YAAY,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAZ;AAIAL,IAAAA,UAAU,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAV;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,KAAK,CAACE,MAAN,CAAaC,KAAxC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BR,YAA/B;AAEA,WAAQD,KAAK,CAAC;AAACC,MAAAA;AAAD,KAAD,CAAb;AAEH;;AAGD,WAASI,YAAT,CAAsBJ,YAAtB,EAAoC;AAChC,QAAI,eAAeS,IAAf,CAAoBT,YAApB,CAAJ,EAAsC;AAClCO,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,KAFD,MAGI;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAE,MAAAA,KAAK,CAAC,6DAAD,CAAL;AACH;AACJ;;AAID,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,EAAE,EAAC,cAFP;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,WAAW,EAAC,OAJhB,CAKI;AACA;AANJ;AAOI,MAAA,QAAQ,EAAER;AAPd;AAAA;AAAA;AAAA;AAAA,YAFJ,eAcI;AAAA,sBAAKF,YAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAtDD;;GAAMF,K;;KAAAA,K;AAwDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react'\n\n\n\n\nconst Input = ( {onAdd} ) => {\n\n    // store the users input in the inputMessage variable and update that value as the user add more text\n    const [inputMessage, setMessage] = useState();\n    \n    \n\n    function handleChange(event) {\n        //event.persist();\n        isValidInput(event.target.value);\n\n\n\n        setMessage(event.target.value);\n\n        \n        console.log(\"event.t.v: \", event.target.value);\n        console.log(\"inputmessage:  \", inputMessage);\n\n        return (onAdd({inputMessage}))\n        \n    }\n\n\n    function isValidInput(inputMessage) {\n        if (/^[a-zA-Z]*$/g.test(inputMessage)){\n            console.log(\"its a valid input\");\n        }\n        else{\n            console.log(\"error bad input\")\n            alert(\"Please use only the letters A-Z either upper or lower case.\")\n        }\n    }\n\n    \n\n    return (\n        <div className=\"input-section\">     \n            <label>Code Input</label>   \n            <input \n                className=\"input-text\" \n                id=\"enigma-input\" \n                type=\"text\" \n                placeholder=\"Input\"\n                //value={inputMessage}\n                //onChange={(event) => setMessage(event.target.value)}\n                onChange={handleChange}\n            />\n\n\n\n            <p> {inputMessage}</p>\n        </div>\n    )\n}\n\nexport default Input\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/james/sfu/hist338/enigma/enigma/src/components/settings/ReflectorSettings.js\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [reflector, setReflector] = useState('UKW-C');\nuseEffect(() => {\n  var _s = $RefreshSig$();\n\n  const reflectorSettings = ({\n    userReflector\n  }) => {\n    _s();\n\n    const [reflector, setReflector] = useState('UKW-C');\n    userReflector({\n      reflector\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reflector settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-subsection\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          defaultValue: \"UKW-C\",\n          className: \"reflector-settings\",\n          id: \"reflector-type\",\n          onChange: event => setReflector(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"UKW-B\",\n            children: \"UkW-B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"UKW-C\",\n            children: \"UKW-C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(reflectorSettings, \"CoW0uG4qV9mF8cp/+er6Xk65LCA=\");\n\n  reflectorSettings();\n}, [reflector]);\nexport default ReflectorSettings;","map":{"version":3,"sources":["/home/james/sfu/hist338/enigma/enigma/src/components/settings/ReflectorSettings.js"],"names":["React","useState","useEffect","reflector","setReflector","reflectorSettings","userReflector","event","target","value","ReflectorSettings"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAIA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,OAAD,CAA1C;AAGAC,SAAS,CAAC,MAAM;AAAA;;AAGZ,QAAMG,iBAAiB,GAAE,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAqB;AAAA;;AAE1C,UAAM,CAACH,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,OAAD,CAA1C;AAEAK,IAAAA,aAAa,CAAC;AAACH,MAAAA;AAAD,KAAD,CAAb;AAEA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BAEI;AACI,UAAA,YAAY,EAAE,OADlB;AAEI,UAAA,SAAS,EAAC,oBAFd;AAGI,UAAA,EAAE,EAAC,gBAHP;AAII,UAAA,QAAQ,EAAGI,KAAD,IAAWH,YAAY,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJrC;AAAA,kCAMI;AAAQ,YAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAQ,YAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH,GAvBD;;AAHY,KAGNJ,iBAHM;;AA4BZA,EAAAA,iBAAiB;AAMpB,CAlCQ,EAkCN,CAACF,SAAD,CAlCM,CAAT;AAoCA,eAAeO,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n\n\nconst [reflector, setReflector] = useState('UKW-C');\n\n\nuseEffect(() => {\n\n\n    const reflectorSettings= ({userReflector}) => {\n\n        const [reflector, setReflector] = useState('UKW-C');\n    \n        userReflector({reflector})\n\n        return (\n            <div>\n                <h2>Reflector settings</h2>\n                <div className=\"settings-subsection\">\n                    {/* <label><a href=\"https://en.wikipedia.org/wiki/Enigma_machine#Reflector\">Reflector type (Umkehrwalze)</a></label> */}\n                    <select \n                        defaultValue={\"UKW-C\"} \n                        className=\"reflector-settings\" \n                        id=\"reflector-type\"\n                        onChange={(event) => setReflector(event.target.value)}\n                    >\n                        <option value=\"UKW-B\">UkW-B</option>\n                        <option value=\"UKW-C\">UKW-C</option>\n                    </select>\n                </div>\n            </div>\n        )\n    }\n\n    reflectorSettings()\n    \n\n\n\n\n}, [reflector])\n\nexport default ReflectorSettings\n"]},"metadata":{},"sourceType":"module"}